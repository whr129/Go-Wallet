// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: wallet_add_amount.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type AddAccountBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        int64                  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	AccountId     int64                  `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAccountBalanceRequest) Reset() {
	*x = AddAccountBalanceRequest{}
	mi := &file_wallet_add_amount_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountBalanceRequest) ProtoMessage() {}

func (x *AddAccountBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_add_amount_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountBalanceRequest.ProtoReflect.Descriptor instead.
func (*AddAccountBalanceRequest) Descriptor() ([]byte, []int) {
	return file_wallet_add_amount_proto_rawDescGZIP(), []int{0}
}

func (x *AddAccountBalanceRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AddAccountBalanceRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

// The response message containing the greetings
type AddAccountBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       *Account               `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"` // The updated account after adding balance
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAccountBalanceResponse) Reset() {
	*x = AddAccountBalanceResponse{}
	mi := &file_wallet_add_amount_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountBalanceResponse) ProtoMessage() {}

func (x *AddAccountBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_add_amount_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountBalanceResponse.ProtoReflect.Descriptor instead.
func (*AddAccountBalanceResponse) Descriptor() ([]byte, []int) {
	return file_wallet_add_amount_proto_rawDescGZIP(), []int{1}
}

func (x *AddAccountBalanceResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

var File_wallet_add_amount_proto protoreflect.FileDescriptor

const file_wallet_add_amount_proto_rawDesc = "" +
	"\n" +
	"\x17wallet_add_amount.proto\x12\x02pb\x1a\fwallet.proto\"Q\n" +
	"\x18AddAccountBalanceRequest\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x03R\x06amount\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\x03R\taccountId\"B\n" +
	"\x19AddAccountBalanceResponse\x12%\n" +
	"\aaccount\x18\x01 \x01(\v2\v.pb.AccountR\aaccountB3Z1github.com/whr129/go-wallet/cmd/wallet-service/pbb\x06proto3"

var (
	file_wallet_add_amount_proto_rawDescOnce sync.Once
	file_wallet_add_amount_proto_rawDescData []byte
)

func file_wallet_add_amount_proto_rawDescGZIP() []byte {
	file_wallet_add_amount_proto_rawDescOnce.Do(func() {
		file_wallet_add_amount_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wallet_add_amount_proto_rawDesc), len(file_wallet_add_amount_proto_rawDesc)))
	})
	return file_wallet_add_amount_proto_rawDescData
}

var file_wallet_add_amount_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wallet_add_amount_proto_goTypes = []any{
	(*AddAccountBalanceRequest)(nil),  // 0: pb.AddAccountBalanceRequest
	(*AddAccountBalanceResponse)(nil), // 1: pb.AddAccountBalanceResponse
	(*Account)(nil),                   // 2: pb.Account
}
var file_wallet_add_amount_proto_depIdxs = []int32{
	2, // 0: pb.AddAccountBalanceResponse.account:type_name -> pb.Account
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_wallet_add_amount_proto_init() }
func file_wallet_add_amount_proto_init() {
	if File_wallet_add_amount_proto != nil {
		return
	}
	file_wallet_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wallet_add_amount_proto_rawDesc), len(file_wallet_add_amount_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wallet_add_amount_proto_goTypes,
		DependencyIndexes: file_wallet_add_amount_proto_depIdxs,
		MessageInfos:      file_wallet_add_amount_proto_msgTypes,
	}.Build()
	File_wallet_add_amount_proto = out.File
	file_wallet_add_amount_proto_goTypes = nil
	file_wallet_add_amount_proto_depIdxs = nil
}
